/*
 * NameSlider.java
 *
 * Created on January 8, 2009, 10:46 PM
 */

package simplemorph;

import java.awt.Color;
import java.awt.Component;
import javax.swing.border.EmptyBorder;
import javax.swing.border.LineBorder;
import utils.ComponentList;

/**
 *
 * @author  tom
 */
public class NameSlider extends javax.swing.JPanel implements ComponentList.ListComponent
{
    BPSUI ui;
    BodyPart part;
    /** Placebo for ui editor*/
    public NameSlider() {
        setBorder( new LineBorder( Color.pink) );
    }

    public NameSlider(BodyPart part, BPSUI ui) 
    {
        this.ui = ui;
        this.part = part;
        initComponents();
        update();
        setBorder( false );
    }
    
    public void update()
    {
        jLabel1.setText( part.name );
        updateSlider();
    }
    
    public void selected()
    {
        ui.instanceSelected(part);
        setBorder( true );
    }

    public void deselected()
    {
        ui.instanceSelected(null);
        setBorder( false );
    }
    
    private void setBorder(boolean selected)
    {
        if (selected)
        {
            setBorder( new LineBorder( Color.black, 2) );
            jLabel1.setForeground( Color.white );
            setBackground( Color.BLUE);
        }
        else
        {
            jLabel1.setForeground( Color.black );
            setBackground( Color.WHITE );
            setBorder( new EmptyBorder( 2,2,2,2 ) );
        }
    }
            
    public void updateSlider()
    {
        int val = (int)(part.weight * weightSlider.getMaximum() ) ;
        if ( val != weightSlider.getValue() )
            weightSlider.setValue( val );
    }

    public Object getObject()
    {
        return part;
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        weightSlider = new javax.swing.JSlider();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new java.awt.GridLayout(1, 0));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("jLabel1");
        jLabel1.setToolTipText("instance name");
        add(jLabel1);

        weightSlider.setMaximum(1000);
        weightSlider.setToolTipText("instance weight (--> more)");
        weightSlider.setOpaque(false);
        weightSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                weightSliderStateChanged(evt);
            }
        });
        add(weightSlider);
    }// </editor-fold>//GEN-END:initComponents

private void weightSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_weightSliderStateChanged
    
    part.weight = weightSlider.getValue() / (double)weightSlider.getMaximum();
    
//    part.bps.normaliseInstanceWeights();
    
    if (getParent() == null)
        return;
    
    for (Component comp : getParent().getComponents())
        if (comp instanceof NameSlider)
            ((NameSlider)comp).updateSlider();
    
}//GEN-LAST:event_weightSliderStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JSlider weightSlider;
    // End of variables declaration//GEN-END:variables


}
